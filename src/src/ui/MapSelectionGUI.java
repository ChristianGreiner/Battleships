package ui;

import javax.swing.*;
import java.awt.*;

public class MapSelectionGUI {
    private JPanel mainContainer;
    private JPanel titleContainer;
    private JLabel titleLbl;
    private JSpinner sizeSpn;
    private JSpinner sizeCopySpn;
    private JPanel spinnerContainer;
    private JPanel sizeLblContainer;
    private JButton continueBtn;
    private JButton backBtn;
    private JPanel btnContainer;
    private JPanel aiSelectionContainer;
    private JComboBox aiDifficultCbox;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainContainer = new JPanel();
        mainContainer.setLayout(new GridBagLayout());
        final JPanel spacer1 = new JPanel();
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainContainer.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.VERTICAL;
        mainContainer.add(spacer2, gbc);
        titleContainer = new JPanel();
        titleContainer.setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(0, 0, 20, 0);
        mainContainer.add(titleContainer, gbc);
        titleLbl = new JLabel();
        Font titleLblFont = this.$$$getFont$$$(null, -1, 36, titleLbl.getFont());
        if (titleLblFont != null) titleLbl.setFont(titleLblFont);
        titleLbl.setHorizontalAlignment(0);
        titleLbl.setHorizontalTextPosition(0);
        titleLbl.setText("MAP SETTINGS");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        titleContainer.add(titleLbl, gbc);
        sizeLblContainer = new JPanel();
        sizeLblContainer.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.BOTH;
        mainContainer.add(sizeLblContainer, gbc);
        final JLabel label1 = new JLabel();
        label1.setText("Size:");
        sizeLblContainer.add(label1);
        spinnerContainer = new JPanel();
        spinnerContainer.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.BOTH;
        mainContainer.add(spinnerContainer, gbc);
        sizeSpn = new JSpinner();
        Font sizeSpnFont = this.$$$getFont$$$(null, Font.BOLD, 18, sizeSpn.getFont());
        if (sizeSpnFont != null) sizeSpn.setFont(sizeSpnFont);
        spinnerContainer.add(sizeSpn);
        final JLabel label2 = new JLabel();
        Font label2Font = this.$$$getFont$$$(null, -1, 18, label2.getFont());
        if (label2Font != null) label2.setFont(label2Font);
        label2.setText("x");
        spinnerContainer.add(label2);
        sizeCopySpn = new JSpinner();
        sizeCopySpn.setEnabled(false);
        Font sizeCopySpnFont = this.$$$getFont$$$(null, Font.BOLD, 18, sizeCopySpn.getFont());
        if (sizeCopySpnFont != null) sizeCopySpn.setFont(sizeCopySpnFont);
        spinnerContainer.add(sizeCopySpn);
        btnContainer = new JPanel();
        btnContainer.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(20, 0, 0, 0);
        mainContainer.add(btnContainer, gbc);
        backBtn = new JButton();
        backBtn.setText("BACK");
        btnContainer.add(backBtn);
        continueBtn = new JButton();
        continueBtn.setText("CONTINUE");
        btnContainer.add(continueBtn);
        aiSelectionContainer = new JPanel();
        aiSelectionContainer.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.BOTH;
        mainContainer.add(aiSelectionContainer, gbc);
        aiDifficultCbox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("Fullretard");
        defaultComboBoxModel1.addElement("Esay");
        defaultComboBoxModel1.addElement("Medium");
        defaultComboBoxModel1.addElement("Hard");
        defaultComboBoxModel1.addElement("Hardcore");
        aiDifficultCbox.setModel(defaultComboBoxModel1);
        aiSelectionContainer.add(aiDifficultCbox);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainContainer;
    }

}
